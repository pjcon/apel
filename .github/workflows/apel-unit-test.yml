# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Apel unit testing integration test

on: [push, pull_request]

jobs:
  apel-unit-test:
    name: "Apel unit test using MariaDB: ${{ matrix.mariadb-version }} Python:${{ matrix.python-version }}"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        mariadb-version: ["10.3"]
        python-version: ["2.7"] #, "3.6"]

    services:
      mariadb:
        image: "mariadb:${{ matrix.mariadb-version }}"
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: "apel_unittest"
          MYSQL_USER: "root"
          MYSQL_PASSWORD: ""

        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
        ports: ["3306:3306"]

    steps:

    - name: Get IP
      run: ip address
    
    - name: Get Hostname
      run: hostname

    - name: Test MariaDB connection
      run: sudo mysql --user root --host '172.18.0.1' <<< 'show tables;'

    # [ ] Cache docker containers/layers to speed up process
    # - uses: actions/cache@v2
    #   path: /var/lib/docker

    #- uses: actions/checkout@v2

    #- name: Set up Python ${{ matrix.python-version }}
    #  uses: actions/setup-python@v2
    #  with:
    #    python-version: ${{ matrix.python-version }}
    

    #- name: Install dependencies
    #  run: |
    #    # [ ] Cache
    #    # Fix missing my_config.h for MySQL-python
    #    sudo wget https://raw.githubusercontent.com/paulfitz/mysql-connector-c/master/include/my_config.h -P /usr/include/mysql/
    #    
    #    # [ ] Cache
    #    # Fix missing lber.h for python-ldap
    #    sudo apt-get install libsasl2-dev libldap2-dev libssl-dev

    #    # [ ] Cache
    #    python -m pip install --upgrade pip
    #    if [ -f requirements.txt ]; then pip2 install -r requirements.txt; fi
    #    if [ -f requirements-test.txt ]; then pip2 install -r requirements-test.txt; fi

    #- name: Unittest with Coverage
    #  run: |
    #    export PYTHONPATH=$PYTHONPATH:`pwd -P`
    #    cd test
    #    coverage run --branch --source=apel,bin -m unittest2 discover --buffer

    #- name: Coverage test with Codecov
    #  run: codecov
